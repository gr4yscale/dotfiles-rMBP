set nocompatible               " be iMproved

" Vundle
filetype off                   " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()


" let Vundle manage Vundle; required! 
Bundle 'gmarik/vundle'

" Plugins
Bundle 'altercation/vim-colors-solarized'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'pangloss/vim-javascript'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'scrooloose/syntastic'

" lint file when it opens
let g:syntastic_check_on_open=1

Bundle 'kien/ctrlp.vim'
Bundle 'majutsushi/tagbar'
"Bundle 'xolox/vim-easytags'

Bundle 'tpope/vim-surround'
Bundle 'ervandew/supertab'
Bundle 'garbas/snipmate.vim'
Bundle 'Raimondi/delimitMate'
Bundle 'thinca/vim-prettyprint'

" Autocompletion
Plugin 'Valloric/YouCompleteMe'
 
" These are the tweaks I apply to YCM's config, you don't need them but they
" might help.
" " YCM gives you popups and splits by default that some people might not
" like, so these should tidy it up a bit for you.
let g:ycm_add_preview_to_completeopt=0
let g:ycm_confirm_extra_conf=0

"make completion behave like an ide
set completeopt=menu,menuone,longest
set pumheight=15
set ofu=syntaxcomplete#Complete
"set completeopt-=preview

" Autocompletion for js
Plugin 'marijnh/tern_for_vim'


" Solarized
syntax enable
if has('gui_running')
  set background=dark
else
  set background=dark
endif
"let g:soloarized_termtrans=1
"let g:solarized_termcolors=256
let g:solarized_contrast="high"
"let g:solarized_visibility="high"
colorscheme solarized

" NERDTree
nmap <silent> <c-n> :NERDTreeToggle<CR>

" some files git always wants to commit
" move them outside the repo
let g:netrw_home=$HOME . "/.vimfiles"

set t_Co=256              " enable 256-color mode.
set number                " show line numbers
set laststatus=2          " last window always has a statusline
filetype plugin indent on " filetype detection[ON] plugin[ON] indent[ON]
au FileType javascript call JavaScriptFold()
set hlsearch              " continue to highlight searched phrases.
set incsearch             " highlight as you type your search.
set ignorecase            " Make searches case-insensitive.
set ruler                 " Always show info along bottom.
set autoindent            " auto-indent
set tabstop=2             " tab spacing
set softtabstop=2         " unify
set shiftwidth=2          " indent/outdent by 4 columns
set shiftround            " always indent/outdent to the nearest tabstop
set expandtab             " use spaces instead of tabs
set smarttab              " use tabs at the start of a line, spaces elsewhere
:retab
set nowrap                " don't wrap text
set nofoldenable
set foldlevel=1
set swapfile
set dir=~/tmp
set backupdir=~/tmp
set backspace=indent,eol,start

let mapleader=","

inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <expr> <M-,> pumvisible() ? '<C-n>' :
  \ '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
"supertab
let g:SuperTabDefaultCompletionType = "context"

" better escape
inoremap jk <Esc>

" ,w to open a split window and switch to it
nnoremap <leader>w <C-w>v<C-w>l

" use <F6> to cycle through split windows
nnoremap <F6> <C-W>w

" cycle backwards
nnoremap <S-F6> <C-W>W

" SuperTab option for context aware completion
let g:SuperTabDefaultCompletionType = "context"

"ctrl-p
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 0       " start searching in current dir"

set wildignore+=*/node_modules/*



"tagbar
nmap <Leader>b :TagbarToggle<CR>

"use ack instead of grep
set grepprg=ack\ --column\ --ignore-file=is:tags
set grepformat=%f:%l:%c:%m

set grepprg+=\ --ignore-dir=build


" nerdcommenter
"
map <D-/> :NERDComComment<CR>
